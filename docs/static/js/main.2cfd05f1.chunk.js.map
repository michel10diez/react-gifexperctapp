{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAeE,EAAEU,OAAOJ,a,+BCRnBK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCJJO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EACdhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAwBxC,OAlBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAK,SAAAC,GAEFC,YAAW,WACP9B,QAAQC,IAAI4B,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAIZ,CAACpB,IAEGqB,EDpB2BM,CAAa3B,GAAjCa,EAHyB,EAG/BN,KAAca,EAHiB,EAGjBA,QAEtB,OACI,qCACI,mCAAOpB,EAAP,OAECoB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAER,OAAO,cAAC,EAAD,eAEEA,GADEA,EAAIC,aEgBxBiB,EAhCM,WAAK,MAGc5C,mBAAS,CAAC,cAHxB,mBAGf6C,EAHe,KAGH9C,EAHG,KAWtB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ8C,EAAWpB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAEHA,SAAUA,GADJA,Y,MCtBlC8B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.2cfd05f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue (e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            \r\n            <input \r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired    \r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=UDmCzTNpYr8fYu541sLmNtMeJnCNjHws`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n \r\n    //console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce \">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            {loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                {\r\n                    images.map( img => {\r\n\r\n                        return <GifGridItem \r\n                            key = {img.id}\r\n                            { ...img }\r\n                        />\r\n                    })                   \r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        getGifs( category )\r\n            .then(imgs =>{\r\n\r\n                setTimeout(() => {\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                    \r\n                }, 3000);\r\n\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n    //const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /*const handleAdd = () => {\r\n        setCategories( [...categories, 'One Piece'] );\r\n        \r\n        \r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            \r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid \r\n                            key= {category}\r\n                            category={category}\r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}